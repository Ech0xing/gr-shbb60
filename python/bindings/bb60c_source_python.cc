/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(bb60c_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(acab343cba51c7f6f7dac2beffa62148)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <shbb60/bb60c_source.h>
// pydoc.h is automatically generated in the build directory
#include <bb60c_source_pydoc.h>

void bind_bb60c_source(py::module& m)
{

    using bb60c_source    = gr::shbb60::bb60c_source;


    py::class_<bb60c_source,
        gr::block,
        std::shared_ptr<bb60c_source>>(m, "bb60c_source", D(bb60c_source))

        .def(py::init(&bb60c_source::make),
           py::arg("center_freq"),
           py::arg("ref_level"),
           py::arg("decimation"),
           py::arg("filter_bw"),
           D(bb60c_source,make)
        )


        .def(
            "set_center_freq",
            &bb60c_source::set_center_freq,
            py::arg("center_freq"),
            D(bb60c_source, set_center_freq))

        .def(
            "set_ref_level",
            &bb60c_source::set_ref_level,
            py::arg("ref_level"),
            D(bb60c_source, set_ref_level))

        .def(
            "set_decimation",
            &bb60c_source::set_decimation,
            py::arg("decimation"),
            D(bb60c_source, set_decimation))

        .def(
            "set_filter_bw",
            &bb60c_source::set_filter_bw,
            py::arg("filter_bw"),
            D(bb60c_source, set_filter_bw))
        



        ;




}








